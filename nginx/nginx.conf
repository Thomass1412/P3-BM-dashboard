events {}

http {
    # Websocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    map $http_x_forwarded_proto $forwarded_protocol {
        default $scheme;

        # Only allow the values 'http' and 'https' for the X-Forwarded-Proto header.
        http http;
        https https;
    }



    #upstream spring-backend {
    #    server backend:8080; # When spring is running as container
    #    server localhost:8080 backup; # When spring is running on host
    #}

    upstream vue-frontend {
        server frontend:80;
    }

    server {
        set $upstreamBackend backend:8080;
        listen 80;
        server_name  _; # Default http://nginx.org/en/docs/http/server_names.html
        
        # Set DNS resolver to docker
        resolver 127.0.0.11 valid=30s;

        # Compression
        gzip on;
        gzip_comp_level 2;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_vary on;
        gunzip on;

        # text/html is included by default
        gzip_types
            application/javascript
            application/json
            font/ttf
            image/svg+xml
            text/css;

        proxy_buffering off;
        proxy_request_buffering off;
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;
        proxy_force_ranges on;

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $forwarded_protocol;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        location /api/v1 {
            set $upstream_backend backend:8080;
            proxy_pass http://$upstream_backend; # Use upstream
        }

        location / {
            proxy_pass http://vue-frontend; # Use upstream
        }
    }
}